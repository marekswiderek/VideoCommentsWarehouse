-- DROP dbt_schema and dbt_user if exists
DROP SCHEMA IF EXISTS dbt_schema CASCADE;

DO
$$BEGIN
    IF EXISTS (SELECT 1 FROM pg_roles WHERE rolname='dbt_user') THEN
        REVOKE CONNECT ON DATABASE video_comments_wh FROM dbt_user;
    END IF;
END$$;

DROP USER IF EXISTS dbt_user;

-- CREATE dbt_user ROLE and give it required permissions
CREATE USER dbt_user
    WITH PASSWORD 'password';

GRANT CONNECT ON DATABASE video_comments_wh TO dbt_user;

CREATE SCHEMA dbt_schema;

-- OWNER PRIVILEDGES ON dbt_schema
ALTER SCHEMA dbt_schema OWNER TO dbt_user;

-- READ ACCESS PERMISSIONS TO BRONZE SCHEMA
GRANT USAGE ON SCHEMA bronze TO dbt_user;
GRANT SELECT ON ALL TABLES IN SCHEMA bronze TO dbt_user;
ALTER DEFAULT privileges IN SCHEMA bronze GRANT SELECT ON TABLES TO dbt_user;

-- READ/WRITE PERMISSIONS TO SILVER SCHEMA
GRANT USAGE ON SCHEMA silver TO dbt_user;
GRANT CREATE ON SCHEMA silver TO dbt_user;
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA silver TO dbt_user;
ALTER DEFAULT privileges IN SCHEMA silver GRANT INSERT, UPDATE, DELETE, TRUNCATE ON TABLES TO dbt_user;

-- READ/WRITE PERMISSIONS TO GOLD SCHEMA
GRANT USAGE ON SCHEMA gold TO dbt_user;
GRANT CREATE ON SCHEMA gold TO dbt_user;
GRANT INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA gold TO dbt_user;
ALTER DEFAULT privileges IN SCHEMA gold GRANT INSERT, UPDATE, DELETE, TRUNCATE ON TABLES TO dbt_user;